{"version":3,"sources":["features/rickandmorty/apiSlice.js","features/rickandmorty/homePage.js","App.js","app/store.js","index.js"],"names":["apiSlice","createSlice","name","initialState","episodes","favourites","reducers","addEpisodes","state","action","push","payload","addFavourite","removeFavourite","filter","item","id","actions","selectEpisodes","api","selectFavourites","Home","props","dispatch","useDispatch","useSelector","toggleFavAction","episode","find","ep","useEffect","Axios","get","params","q","embed","then","response","data","_embedded","style","margin","TabPane","tab","key","gutter","justify","length","map","width","cover","src","image","medium","alt","Meta","title","season","number","description","icon","fav","LikeFilled","LikeOutlined","type","onClick","marginLeft","marginTop","size","App","className","configureStore","reducer","apiReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8773f3c4.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst API_URL = \"https://api.tvmaze.com/singlesearch/shows\";\n\nexport const apiSlice = createSlice({\n  name: \"rickandmorty\",\n  initialState: {\n    episodes: [],\n    favourites: [],\n  },\n  reducers: {\n    addEpisodes: (state, action) => {\n      state.episodes.push(...action.payload);\n    },\n    addFavourite: (state, action) => {\n      state.favourites.push(action.payload);\n    },\n    removeFavourite: (state, action) => {\n      state.favourites = state.favourites.filter(\n        (item) => item.id !== action.payload.id\n      );\n    },\n  },\n});\n\n// async thunk function\nexport const addEpisodesFromAPI = () => (dispatch) => {\n  Axios.get(API_URL, {\n    params: { q: \"rick-&-morty\", embed: \"episodes\" },\n  }).then((response) => {\n    const { episodes } = response.data._embedded;\n    dispatch(addEpisodes(episodes));\n  });\n};\n\nexport const { addEpisodes, addFavourite, removeFavourite } = apiSlice.actions;\nexport const selectEpisodes = (state) => state.api.episodes;\nexport const selectFavourites = (state) => state.api.favourites;\n\nexport default apiSlice.reducer;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Card, Row, Col, Button, Spin, Tabs, Empty } from \"antd\";\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\";\n\nimport {\n  addEpisodesFromAPI,\n  addFavourite,\n  removeFavourite,\n  selectEpisodes,\n  selectFavourites,\n} from \"./apiSlice\";\n\nconst Home = (props) => {\n  const dispatch = useDispatch();\n  const episodes = useSelector(selectEpisodes);\n  const favourites = useSelector(selectFavourites);\n\n  const toggleFavAction = (episode) => {\n    favourites.find((ep) => ep.id === episode.id)\n      ? dispatch(removeFavourite(episode))\n      : dispatch(addFavourite(episode));\n  };\n\n  useEffect(() => {\n    //adds episodes from the TVMaze API on mounting the component\n    dispatch(addEpisodesFromAPI());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={{ margin: 40 }}>\n        <Tabs>\n          <Tabs.TabPane tab=\"Episodes\" key=\"1\">\n            <h1>Episodes</h1>\n            <p>Select your favourite episodes</p>\n            <Row gutter={[16, 16]} justify=\"center\">\n              {episodes.length !== 0 ? (\n                episodes.map((item) => {\n                  return (\n                    <Col>\n                      <Card\n                        key={item.id}\n                        style={{ width: 300 }}\n                        cover={\n                          <img\n                            src={item.image != null ? item.image.medium : null}\n                            alt={item.name}\n                          />\n                        }\n                      >\n                        <Card.Meta\n                          title={`Season: ${item.season} Episode: ${item.number}`}\n                          description={item.name}\n                        />\n                        <br />\n                        <Button\n                          icon={\n                            favourites.find((fav) => fav.id === item.id) ? (\n                              <LikeFilled />\n                            ) : (\n                              <LikeOutlined />\n                            )\n                          }\n                          type=\"primary\"\n                          onClick={() => toggleFavAction(item)}\n                        >\n                          {favourites.find((fav) => fav.id === item.id)\n                            ? \"Unlike\"\n                            : \"Like\"}\n                        </Button>\n                      </Card>\n                    </Col>\n                  );\n                })\n              ) : (\n                <div style={{ marginLeft: 10, marginTop: 30 }}>\n                  <Spin size=\"large\" />\n                </div>\n              )}\n            </Row>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Favourites\" key=\"2\">\n            <h1>Favourites</h1>\n            <p>See your favourite episodes here</p>\n            <Row gutter={[16, 16]} justify=\"center\">\n              {favourites.length !== 0 ? (\n                favourites.map((item) => {\n                  return (\n                    <Col>\n                      <Card\n                        key={item.id}\n                        style={{ width: 300 }}\n                        cover={\n                          <img\n                            src={item.image != null ? item.image.medium : null}\n                            alt={item.name}\n                          />\n                        }\n                      >\n                        <Card.Meta\n                          title={`Season: ${item.season} Episode: ${item.number}`}\n                          description={item.name}\n                        />\n                        <br />\n                        <Button\n                          icon={\n                            favourites.find((fav) => fav.id === item.id) ? (\n                              <LikeFilled />\n                            ) : (\n                              <LikeOutlined />\n                            )\n                          }\n                          type=\"primary\"\n                          onClick={() => toggleFavAction(item)}\n                        >\n                          {favourites.find((fav) => fav.id === item.id)\n                            ? \"Unlike\"\n                            : \"Like\"}\n                        </Button>\n                      </Card>\n                    </Col>\n                  );\n                })\n              ) : (\n                <div style={{ marginLeft: 10, marginTop: 30 }}>\n                  <Empty />\n                </div>\n              )}\n            </Row>\n          </Tabs.TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./features/rickandmorty/homePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <Home />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport apiReducer from \"../features/rickandmorty/apiSlice\";\n\nexport default configureStore({\n  reducer: {\n    api: apiReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}